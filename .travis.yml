language: cpp

env:
  global:
    - secure: "ChCJe8+CMCJdFcCAtk9o2LsLj/DaZCHykTq1NokqpjxHeEr6Lo03FjXRl3jSu9jwOLSJiH05jTjkmbsuIxAsZWFMLRY7X1rc+Z282uQ/GTUCecSpMjKHly2UUjaCtQbTikqDgqbUQAcll2cKHngJ5u1lzLmdLRtICoNaOQO4Ei9gHz1xacybPepJFjUpxRzABkjj7XVKxMx+MSkKNl7AVljaGN0flyQVTrdHifT7AOSoNVyl96J0Xxinzt6BDat2zj3nAMeEP5DGByaKx1Ef2SvaqtLyzl7UfOw9kr7oHOsxRfKXGnfLCXyRYu5jWklxLQUIRRDO4IRbvXsqCgyTzrewGzg+pjn9Iv0C6gyVCnosZ6x7BnWnYpkSoCyiLbjaCxBUCFKHqXEqYXDcrq9zPGKrGcN+NIpkdp3BkniLsvg9CQNLByl90is/6iSeiIxcKlIdq30fPjGlmX0T+pM68wNL749xpUeBp5SJhbKV2xHXKFJassNpr9HRMmEWGwTVJuXZ9Oi81WZFcoSj7TERDE5A78ThckBDASLB9SglIFKDbapqrPt6K4ArB+87vcCJ3F6GT7DyBHoLoWKiwig/BOka+r1Xb+Qb7wqX2VA4hxe+ORwuhUzvyguGB0BgdsEwUCKqWrGPlS8Qrf+HYX4jji7ng/hB4haiJd27XG5HepM="
    - secure: "N/DlgYl7l0jGCaYdlsyGXKdlm1w+8cbcYdoQrlI36PxwE26FHQQraxWpNF9X2VZ9DfVzOc9rj+3bJU9iAfPc5PiGJONCj/KnUGJ6Rk2V/Vlo4RvP6GPmQUK8OvgO2B/zCPn6X8ry466MgLw1p634B+ARJZ0AzHLR/qp5Li2gHSpZ7qHl4Z4GsBTMBd8hBFkFZKqz7xsTSRJSvPtjR3OPK+eC9x3eyMpqxqTkM264JfS+Fo5k8CUB/IUz6SVK2hA2JUHKis7MnaquSAufACEyU3I7LNKDQTXTlfsVNF/9YRSNuugkemzX8U9XKwqHOuksH9442RmFbrl2A8oKafN3oJjyhjgbt9yEsCjPwz2efcs08h6aHRrAq4FOQqs2ECPXr1os/99em2nAJv2hhN12nJvhbwrNGaxAg8GiarEkNYcWSklgCQcV0Vzuz/P1Mm6ObgaeUzU9qydhkR2eN7jw7d22vM87evIqDNuKwd/KmYbCbQmugNu6La4TCdPOyq+OnZF4QhHnGDkzErx8i5FakRm2Vf0vi4Mi1h7oliu8ZrrC2Sk+iqLLaW3vUrROwxLV2pfskzscdCHV0GzUJkKAC1FFkYJR8kloOL/M9NcYHQCO4o+BacKK61Y+dS0tV6kztl7FB2/ZPaXzkvp7ad2xGz9YhUscVBIBHGT712hp5cs="

jobs:
  include:
    - stage: test
      name: Linux MaBoSS tests
      
      os: linux
      dist: xenial

      before_install:
        - sudo pip install numpy

      install:
        - bash -c "cd engine/src; make install; make MAXNODES=128 install"
        
      script:
        - bash -c "cd engine/tests; bash ./test-cellcycle.sh"
        - bash -c "cd engine/tests; bash ./test-ensemble.sh"
        - bash -c "cd engine/tests; bash ./test-ewing.sh"
        - bash -c "cd engine/tests; bash ./test-server.sh"
        - bash -c "cd engine/tests; bash ./test-user_func.sh"
    

    - stage: test
      name: MacOSX MaBoSS tests

      os: osx

      before_install:
        - brew install flex bison;
        - pip install numpy;

      install:
        - bash -c "cd engine/src; make install; make MAXNODES=128 install"
        
      script:
        - bash -c "cd engine/tests; bash ./test-cellcycle.sh"
        - bash -c "cd engine/tests; bash ./test-ensemble.sh"
        - bash -c "cd engine/tests; bash ./test-ewing.sh"
        - bash -c "cd engine/tests; bash ./test-server.sh"
        - bash -c "cd engine/tests; bash ./test-user_func.sh"


    - stage: test
      name: MaBoSS-server docker test

      os: linux
      dist: xenial
      services: docker
      python: 3.8

      before_install:
        - sudo apt-get -qq update
        - sudo apt-get install -yq python3-pip python3-setuptools
        - sudo pip3 install -U docker-compose
        - sudo pip install numpy

      install:
        - docker-compose up -d maboss-server
        - bash -c "cd engine/src; make"

      script:
        - bash -c "cd engine/tests; bash ./test-container.sh"


    - stage: test
      name: MaBoSS-server singularity test

      os: linux
      dist: xenial
      services: docker
      python: 3.8

      before_install:
        - wget -O- http://neuro.debian.net/lists/xenial.us-ca.full | sudo tee /etc/apt/sources.list.d/neurodebian.sources.list
        - sudo apt-get -qq update
        - sudo apt-get install -yq --allow-unauthenticated python-virtualenv singularity-container debootstrap
        - sudo pip install numpy

      install:
        - sudo singularity build maboss-server.simg containers/singularity/Singularity
        - singularity run maboss-server.simg & 
        - bash -c "cd engine/src; make"

      script:
        - bash -c "cd engine/tests; bash ./test-container.sh"


    - stage: test
      name: Linux cMaBoSS tests

      os: linux
      dist: xenial
      python: 3.8

      install:
        - bash -c "cd engine/src; make;"
        - bash -c "cd engine/python; cp -r ../src .; python3 setup.py build_ext --inplace"
      
      script:
        - bash -c "cd engine/python; python3 -m unittest test"
        - bash -c "cd engine/python; python3 -m unittest test_128n"


    - stage: test
      name: MacOSX cMaBoSS tests

      os: osx

      before_install:
        - brew install flex bison
        - FULL_PYTHON_VERSION=`pyenv install -l | sed 's/ *//' | grep -e "^3.8\.[0-9]*$" | tail -n 1`
        - CONFIGURE_OPTS="--with-openssl=$(brew --prefix openssl)" pyenv install $FULL_PYTHON_VERSION
      
      install:
        - bash -c "cd engine/src; make"
        - bash -c "cd engine/python; cp -r ../src ."
        - cd engine/python;
        - /Users/travis/.pyenv/versions/$FULL_PYTHON_VERSION/bin/python3 setup.py build_ext --inplace

      script:
        - bash -c "cd engine/python; /Users/travis/.pyenv/versions/$FULL_PYTHON_VERSION/bin/python3 -m unittest test"
        - bash -c "cd engine/python; /Users/travis/.pyenv/versions/$FULL_PYTHON_VERSION/bin/python3 -m unittest test_128n"


    - stage: deploy
      name: MaBoSS-server docker hub image update

      os: linux
      python: 3.8
      dist: xenial
      
      install:
        - echo "$DOCKER_HUB_PASSWORD" | docker login --username vnoel --password-stdin
        - sudo apt-get -qq update
        - sudo apt-get install -yq python3-pip python3-setuptools
        - sudo pip3 install -U docker-compose

      script:
        - docker-compose build maboss-server

      after_success:
        - docker tag maboss-server:latest vnoel/maboss-server:latest
        - docker push vnoel/maboss-server:latest


    - stage: deploy
      name: MaBoSS-server singularity image upload

      os: linux
      python: 3.8
      dist: xenial

      install:
        - wget -O- http://neuro.debian.net/lists/xenial.us-ca.full | sudo tee /etc/apt/sources.list.d/neurodebian.sources.list
        - sudo apt-get -qq update
        - sudo apt-get install -yq --allow-unauthenticated python-virtualenv singularity-container debootstrap
      
      script: 
        - sudo singularity build maboss-server.simg containers/singularity/Singularity

    - stage: deploy
      name: Linux cMaBoSS upload on pypi

      os: linux
      dist: xenial
      sudo: required
      services: docker
      
      install:
        - bash -c "cd engine/src; make"
        - bash -c "cd engine/python; cp -r ../src ."
        - sudo pip install twine
      
      script:
        - cd engine/python
        - docker run --rm -e PLAT=manylinux1_x86_64 -v `pwd`:/io quay.io/pypa/manylinux1_x86_64 /io/build-wheels.sh

      after_success:
        - twine upload -u vincent-noel -p $PYPI_PASS --skip-existing wheelhouse/*


    - stage: deploy
      name: MacOSX cMaBoSS upload on pypi

      os: osx
      
      install:
        - bash -c "cd engine/src; make"
        - bash -c "cd engine/python; cp -r ../src ."
        
        - FULL_PYTHON_VERSION=`pyenv install -l | sed 's/ *//' | grep -e "^3.5\.[0-9]*$" | tail -n 1` 
        - CONFIGURE_OPTS="--with-openssl=$(brew --prefix openssl)" pyenv install $FULL_PYTHON_VERSION
        - /Users/travis/.pyenv/versions/$FULL_PYTHON_VERSION/bin/pip install wheel twine
        
        - FULL_PYTHON_VERSION=`pyenv install -l | sed 's/ *//' | grep -e "^3.6\.[0-9]*$" | tail -n 1` 
        - CONFIGURE_OPTS="--with-openssl=$(brew --prefix openssl)" pyenv install $FULL_PYTHON_VERSION
        - /Users/travis/.pyenv/versions/$FULL_PYTHON_VERSION/bin/pip install wheel twine
        
        - FULL_PYTHON_VERSION=`pyenv install -l | sed 's/ *//' | grep -e "^3.7\.[0-9]*$" | tail -n 1` 
        - CONFIGURE_OPTS="--with-openssl=$(brew --prefix openssl)" pyenv install $FULL_PYTHON_VERSION
        - /Users/travis/.pyenv/versions/$FULL_PYTHON_VERSION/bin/pip install wheel twine
        
        - FULL_PYTHON_VERSION=`pyenv install -l | sed 's/ *//' | grep -e "^3.8\.[0-9]*$" | tail -n 1` 
        - CONFIGURE_OPTS="--with-openssl=$(brew --prefix openssl)" pyenv install $FULL_PYTHON_VERSION
        - /Users/travis/.pyenv/versions/$FULL_PYTHON_VERSION/bin/pip install wheel twine

      script:
        - cd engine/python
        
        - FULL_PYTHON_VERSION=`pyenv install -l | sed 's/ *//' | grep -e "^3.5\.[0-9]*$" | tail -n 1` 
        - /Users/travis/.pyenv/versions/$FULL_PYTHON_VERSION/bin/pip wheel . -w wheelhouse
        
        - FULL_PYTHON_VERSION=`pyenv install -l | sed 's/ *//' | grep -e "^3.6\.[0-9]*$" | tail -n 1` 
        - /Users/travis/.pyenv/versions/$FULL_PYTHON_VERSION/bin/pip wheel . -w wheelhouse
        
        - FULL_PYTHON_VERSION=`pyenv install -l | sed 's/ *//' | grep -e "^3.7\.[0-9]*$" | tail -n 1` 
        - /Users/travis/.pyenv/versions/$FULL_PYTHON_VERSION/bin/pip wheel . -w wheelhouse
        
        - FULL_PYTHON_VERSION=`pyenv install -l | sed 's/ *//' | grep -e "^3.8\.[0-9]*$" | tail -n 1` 
        - /Users/travis/.pyenv/versions/$FULL_PYTHON_VERSION/bin/pip wheel . -w wheelhouse

      after_success:
        - /Users/travis/.pyenv/versions/$FULL_PYTHON_VERSION/bin/twine upload -u vincent-noel -p $PYPI_PASS --skip-existing wheelhouse/*
